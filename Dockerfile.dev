# ===========================================
# 開発用 Dockerfile（Docker + uv）
# ===========================================
FROM python:3.12-slim

# Python の標準出力を即時反映 & .pyc 作成抑止（開発時の混乱防止）
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# 必要ツールのインストール
# - curl: uvインストーラ取得用
# - build-essential: C拡張を含むパッケージ（pandas, numpyなど）ビルド用
# - git: Gitリポジトリから直接依存を追加する場合に必要
# - rm -rf /var/lib/apt/lists/*: APTキャッシュ削除でイメージ軽量化
RUN apt-get update \
 && apt-get install -y curl build-essential git \
 && rm -rf /var/lib/apt/lists/*

# uv のインストール（公式インストーラ）
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# uv のインストール先を PATH に追加（どこからでも uv コマンドを呼べるようにする）
ENV PATH="/root/.local/bin:${PATH}"

# 作業ディレクトリを統一（docker-compose の volumes と揃える）
WORKDIR /workspace

# 依存定義ファイルだけ先にコピー（Docker レイヤーキャッシュを効かせる）
COPY pyproject.toml ./
COPY uv.lock* ./

# uv.lock がある場合は厳格同期（--frozen）で依存を固定
# ない場合は通常同期（初期セットアップ用）
RUN if [ -f uv.lock ]; then uv sync --frozen; else uv sync; fi

# デフォルトの起動コマンド（コンテナに入ったら bash）
CMD ["bash"]